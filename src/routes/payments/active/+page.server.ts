import { payments } from '../../../db/payments';
import { users } from '../../../db/users';
import type { PageServerLoad } from './$types';
import { redirect } from "@sveltejs/kit";
import { error } from "@sveltejs/kit";


export const load: PageServerLoad = async function({cookies, locals, request}) {

	if (!locals.user) {
		throw redirect(302, "/")
		
	}

	let dataPayments
	let dataUsers = await users.find({ _id: locals.user.email }).toArray();

	// TODO: If admin change query, admin ready? :O
	if (dataUsers[0].admin) {		
		dataPayments = await payments.find({ ready: false }).sort({date: 1}).toArray();
		
	} else {
		dataPayments = await payments.find({"mestiDicom.email": { $eq: locals.user.email, $exists: true }}).sort({date: 1}).toArray();
	}
	
	// Formatting Date and Hour
	for (let index = 0; index < dataPayments.length; index++) {
		dataPayments[index].fecha = dataPayments[index].date.toLocaleString("es-CL", {timeZone: 'America/Santiago'}).split(',')[0].replaceAll("-", "/");
		dataPayments[index].hora = dataPayments[index].date.toLocaleString("es-CL", {timeZone: 'America/Santiago'}).split(',')[1].slice(1, -3);

		// Typecasts autogenerated object _id to string
		dataPayments[index]._id = dataPayments[index]._id.toString()
	}
	
	return{
			payments: dataPayments
	}
}