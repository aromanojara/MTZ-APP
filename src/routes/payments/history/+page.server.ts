import { payments } from '../../../db/payments';
import type { PageServerLoad } from './$types';
import { redirect } from "@sveltejs/kit";
import { error } from "@sveltejs/kit";

export const actions = {

    FilterByDate: async (event, params, locals) => {
		
        const data = await event.request.formData();		
		const filterDate = data.get('filterDate');

		let dataPayments = await payments.find({dateYM: filterDate, ready: true}).sort({date: -1}).toArray();
		
		// Formatting Date and Hour
		for (let index = 0; index < dataPayments.length; index++) {
			dataPayments[index].fecha = dataPayments[index].date.toLocaleString("es-CL", {timeZone: 'America/Santiago', hour12: false}).split(',')[0].replaceAll("-", "/");
			dataPayments[index].hora = dataPayments[index].date.toLocaleString("es-CL", {timeZone: 'America/Santiago', hour12: false}).split(',')[1].slice(1, -3);

			// Typecasts autogenerated object _id to string
			dataPayments[index]._id = dataPayments[index]._id.toString()
		}

		return {
			payments: dataPayments,
			filterDate: filterDate
		}
	}
};

export const load: PageServerLoad = async function({cookies, locals, request}) {

	if (!locals.user) {
		throw redirect(302, "/")
		
	}

	let result = new Date().toLocaleDateString("es-CL", { year: "numeric", month: "2-digit", day: "2-digit"}).slice(3).split("-")
	let filterDate = result[1] + "-" + result[0]

	let dataPayments = await payments.find({dateYM: filterDate, ready: true}).sort({date: -1}).toArray();

	// Formatting Date and Hour
	for (let index = 0; index < dataPayments.length; index++) {
		dataPayments[index].fecha = dataPayments[index].date.toLocaleString("es-CL", {timeZone: 'America/Santiago', hour12: false}).split(',')[0].replaceAll("-", "/");
		dataPayments[index].hora = dataPayments[index].date.toLocaleString("es-CL", {timeZone: 'America/Santiago', hour12: false}).split(',')[1].slice(1, -3);

		// Typecasts autogenerated object _id to string
		dataPayments[index]._id = dataPayments[index]._id.toString()
	}
	
	return{
			payments: dataPayments,
			filterDate: filterDate
	}
}